# -*- coding: utf-8 -*-
# author:shihua
# coder:shihua
# 这是一个模型库操作命令的基础类，主要采用命令模式，将模型库操作命令对象化，便于扩展。
"""
模块介绍
-------

这是一个模型库操作命令的基础类，主要采用命令模式，将模型库操作命令对象化，便于扩展。

功能
----

    设计模式：          

        （1）命令模式

    关键点：               

        （1）命令对象化，便于扩展   

    主要功能：     

        （1）操作模型库                                                            

类说明
------

"""



####### 载入程序包 ##########################################################
############################################################################



from abc import ABCMeta,abstractmethod
import time



####### 模型库操作命令基础类 ######################################################
### 设计模式：                                                                 ###
### （1）命令模式                                                              ###
### 关键点：                                                                   ###
### （1）命令对象化，便于扩展                                                   ###
### 主要功能：                                                                 ###
### （1）操作模型库                                                            ###
#################################################################################



###### 模型库操作命令基础类 ############################################################
######################################################################################



class ModelCommand_base(metaclass = ABCMeta):
    """
    类介绍：

        这是一个模型命令的基类，使用了命令模式
    """


    def __init__(self,manager):
        """
        属性方法功能：

            定义一个初始化函数，用来接受模型管理者对象

        参数：
            manager (object)：模型管理者对象
        """

        self._manager = manager


    def setManager(self,manager):
        """
        方法功能：

            定义一个设置模型管理者的函数
        
        参数：   
            manager (object)：模型管理者对象

        返回：
            返回：无返回
        """

        self._manager = manager


    @abstractmethod
    def execute(self,**kwargs):
        """
        方法功能：

            定义一个模型命令执行抽象函数
        """

        pass



###### 模型库操作命令具体实例-宏命令 #################################################################
###################################################################################################



class ModelCommand_macro(ModelCommand_base):
    """
    类介绍：

        这是一个模型命令的具体实例，主要直线一组命令，也可称之为宏命令
    """


    def __init__(self,manager = None):
        """
        属性方法功能：

            定义一个初始化函数，用来继承ModelCommand_base的功能和存储命令对象池
        """

        super().__init__(manager)
        self.__commands = []


    def addCommand(self,command):
        """
        方法功能：

            定义一个添加模型命令对象的函数
        
        参数：   
            command (object)：命令对象

        返回：
            返回：无返回
        """

        self.__commands.append(command)


    def removeCommand(self,command):
        """
        方法功能：

            定义一个删除模型命令对象的函数

        参数：   
            command (object)：命令对象
           
        返回：   
            返回：无返回
        """

        self.__commands.remove(command)


    def execute(self,**kwargs):
        """
        方法功能：

            定义一个执行所有命令的函数

        参数：   
            输入：无输入
           
        返回：   
            返回：无返回
        """

        for command in self.__commands:
            command.execute(**kwargs)



####### 模型调度者类 ######################################################################################
##########################################################################################################



class ModelInvoker(object):
    """
    类介绍：

        这是一个模型命令调度者类，主要用于模型命令的使用与调度，一般只能加载一个模型命令
    """
    

    def __init__(self):
        """
        属性方法功能：

            定义一个初始化函数，主要用于加载命令对象进来
        """

        self.__command = None
        self.command_result = None


    def setCommand(self,command):
        """
        方法功能：

            定义一个设置模型命令对象的函数
           
        参数：   
            command (object)：命令对象

        返回：
            返回：模型命令调度者类本身，数据类型object
        """

        self.__command = command

        return self


    def action(self,**kwargs):
        """
        方法功能：

            定义一个执行加载设置的模型命令
           
        参数：   
            输入：无参数
           
        返回：   
            返回：无返回
        """

        if self.__command is not None:
            command_result = self.__command.execute(**kwargs)
            self.command_result = command_result
            return self.command_result



######################################################################################################
######################################################################################################


